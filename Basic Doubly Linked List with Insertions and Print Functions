#include <iostream>
using namespace std;

class Node {
public:
    int data;
    Node* next;
    Node* prev;

    Node(int d) {
        this->data = d;
        this->next = nullptr;
        this->prev = nullptr;
    }
};

void print(Node* head) {
    Node* temp = head;
    while (temp) {
        cout << temp->data << " -> ";
        temp = temp->next;
    }
    cout << "None" << endl;
}

void printDetails(Node* head) {
    Node* temp = head;
    while (temp) {
        cout << "Data: " << temp->data 
             << ", Next: " << (temp->next ? to_string(temp->next->data) : "None")
             << ", Prev: " << (temp->prev ? to_string(temp->prev->data) : "None") 
             << " | ";
        temp = temp->next;
    }
    cout << endl;
}

int getLength(Node* head) {
    int len = 0;
    Node* temp = head;
    while (temp != nullptr) {
        len++;
        temp = temp->next;
    }
    return len;
}

void insertAtHead(Node* &head, int d) {
    Node* temp = new Node(d);
    temp->next = head;
    if (head != nullptr) {
        head->prev = temp;
    }
    head = temp;
}

void insertAtTail(Node* &head, int d) {
    Node* temp = new Node(d);
    if (head == nullptr) {
        head = temp;
    } else {
        Node* tail = head;
        while (tail->next != nullptr) {
            tail = tail->next;
        }
        tail->next = temp;
        temp->prev = tail;
    }
}

int main() {
    Node* head = nullptr;

    cout << "Creating initial list with one node (10)..." << endl;
    insertAtTail(head, 10);
    print(head); 
    cout << "Length of LinkedList: " << getLength(head) << endl;

    cout << endl;

    cout << "Inserting 20 at tail..." << endl;
    insertAtTail(head, 20);
    print(head); 
    cout << "Length of LinkedList: " << getLength(head) << endl;

    cout << endl;

    cout << "Inserting 30 at tail..." << endl;
    insertAtTail(head, 30);
    print(head); 
    cout << "Length of LinkedList: " << getLength(head) << endl;

    cout << endl;

    cout << "Inserting 40 at tail..." << endl;
    insertAtTail(head, 40);
    print(head); 
    cout << "Length of LinkedList: " << getLength(head) << endl;

    return 0;
}
